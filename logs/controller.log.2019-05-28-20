[2019-05-28 20:00:46,813] INFO [Controller id=100] Shutting down broker 100 (kafka.controller.KafkaController)
[2019-05-28 20:00:46,814] DEBUG [Controller id=100] All shutting down brokers: 100 (kafka.controller.KafkaController)
[2019-05-28 20:00:46,815] DEBUG [Controller id=100] Live brokers:  (kafka.controller.KafkaController)
[2019-05-28 20:00:46,818] TRACE [Controller id=100] All leaders = prueba-0 -> (Leader:-1,ISR:0,LeaderEpoch:2,ControllerEpoch:4),clientes-0 -> (Leader:-1,ISR:0,LeaderEpoch:2,ControllerEpoch:4),example-0 -> (Leader:-1,ISR:0,LeaderEpoch:2,ControllerEpoch:4) (kafka.controller.KafkaController)
[2019-05-28 20:00:47,684] INFO [ControllerEventThread controllerId=100] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2019-05-28 20:00:47,684] INFO [ControllerEventThread controllerId=100] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2019-05-28 20:00:47,684] INFO [ControllerEventThread controllerId=100] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2019-05-28 20:00:47,685] DEBUG [Controller id=100] Resigning (kafka.controller.KafkaController)
[2019-05-28 20:00:47,685] DEBUG [Controller id=100] Unregister BrokerModifications handler for Set(100) (kafka.controller.KafkaController)
[2019-05-28 20:00:47,686] INFO [PartitionStateMachine controllerId=100] Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2019-05-28 20:00:47,688] INFO [ReplicaStateMachine controllerId=100] Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2019-05-28 20:00:47,688] INFO [RequestSendThread controllerId=100] Shutting down (kafka.controller.RequestSendThread)
[2019-05-28 20:00:47,688] INFO [RequestSendThread controllerId=100] Shutdown completed (kafka.controller.RequestSendThread)
[2019-05-28 20:00:47,688] INFO [RequestSendThread controllerId=100] Stopped (kafka.controller.RequestSendThread)
[2019-05-28 20:00:47,690] INFO [Controller id=100] Resigned (kafka.controller.KafkaController)
[2019-05-28 20:03:05,074] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@e73f9ac, name=log4j:logger=kafka.controller (kafka.controller)
[2019-05-28 20:03:15,875] INFO [ControllerEventThread controllerId=100] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2019-05-28 20:03:15,895] INFO [Controller id=100] 100 successfully elected as the controller. Epoch incremented to 5 and epoch zk version is now 5 (kafka.controller.KafkaController)
[2019-05-28 20:03:15,896] INFO [Controller id=100] Registering handlers (kafka.controller.KafkaController)
[2019-05-28 20:03:15,899] INFO [Controller id=100] Deleting log dir event notifications (kafka.controller.KafkaController)
[2019-05-28 20:03:15,902] INFO [Controller id=100] Deleting isr change notifications (kafka.controller.KafkaController)
[2019-05-28 20:03:15,905] INFO [Controller id=100] Initializing controller context (kafka.controller.KafkaController)
[2019-05-28 20:03:15,919] INFO [Controller id=100] Initialized broker epochs cache: Map(100 -> 191) (kafka.controller.KafkaController)
[2019-05-28 20:03:15,933] DEBUG [Controller id=100] Register BrokerModifications handler for Set(100) (kafka.controller.KafkaController)
[2019-05-28 20:03:15,945] DEBUG [Channel manager on controller 100]: Controller 100 trying to connect to broker 100 (kafka.controller.ControllerChannelManager)
[2019-05-28 20:03:15,954] INFO [RequestSendThread controllerId=100] Starting (kafka.controller.RequestSendThread)
[2019-05-28 20:03:15,956] INFO [Controller id=100] Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2019-05-28 20:03:15,956] INFO [Controller id=100] Currently active brokers in the cluster: Set(100) (kafka.controller.KafkaController)
[2019-05-28 20:03:15,957] INFO [Controller id=100] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2019-05-28 20:03:15,957] INFO [Controller id=100] Current list of topics in the cluster: Set(prueba, clientes, example) (kafka.controller.KafkaController)
[2019-05-28 20:03:15,957] INFO [Controller id=100] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2019-05-28 20:03:15,963] INFO [Controller id=100] List of topics to be deleted: prueba,clientes,example (kafka.controller.KafkaController)
[2019-05-28 20:03:15,963] INFO [Controller id=100] List of topics ineligible for deletion: prueba,clientes,example (kafka.controller.KafkaController)
[2019-05-28 20:03:15,964] INFO [Controller id=100] Initializing topic deletion manager (kafka.controller.KafkaController)
[2019-05-28 20:03:15,964] INFO [Controller id=100] Sending update metadata request (kafka.controller.KafkaController)
[2019-05-28 20:03:15,973] INFO [ReplicaStateMachine controllerId=100] Initializing replica state (kafka.controller.ReplicaStateMachine)
[2019-05-28 20:03:15,979] INFO [ReplicaStateMachine controllerId=100] Triggering online replica state changes (kafka.controller.ReplicaStateMachine)
[2019-05-28 20:03:15,981] INFO [RequestSendThread controllerId=100] Controller 100 connected to 192.168.1.66:9192 (id: 100 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2019-05-28 20:03:15,984] INFO [ReplicaStateMachine controllerId=100] Started replica state machine with initial state -> Map([Topic=example,Partition=0,Replica=0] -> ReplicaDeletionIneligible, [Topic=clientes,Partition=0,Replica=0] -> ReplicaDeletionIneligible, [Topic=prueba,Partition=0,Replica=0] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2019-05-28 20:03:15,985] INFO [PartitionStateMachine controllerId=100] Initializing partition state (kafka.controller.PartitionStateMachine)
[2019-05-28 20:03:15,987] INFO [PartitionStateMachine controllerId=100] Triggering online partition state changes (kafka.controller.PartitionStateMachine)
[2019-05-28 20:03:15,989] INFO [PartitionStateMachine controllerId=100] Started partition state machine with initial state -> Map(prueba-0 -> OfflinePartition, clientes-0 -> OfflinePartition, example-0 -> OfflinePartition) (kafka.controller.PartitionStateMachine)
[2019-05-28 20:03:15,990] INFO [Controller id=100] Ready to serve as the new controller with epoch 5 (kafka.controller.KafkaController)
[2019-05-28 20:03:15,992] INFO [Controller id=100] Removing partitions Set() from the list of reassigned partitions in zookeeper (kafka.controller.KafkaController)
[2019-05-28 20:03:15,993] INFO [Controller id=100] No more partitions need to be reassigned. Deleting zk path /admin/reassign_partitions (kafka.controller.KafkaController)
[2019-05-28 20:03:15,996] INFO [Topic Deletion Manager 100], Handling deletion for topics example,prueba,clientes (kafka.controller.TopicDeletionManager)
[2019-05-28 20:03:15,998] INFO [Topic Deletion Manager 100], Retrying delete topic for topic example since replicas [Topic=example,Partition=0,Replica=0] were not successfully deleted (kafka.controller.TopicDeletionManager)
[2019-05-28 20:03:16,043] INFO [Topic Deletion Manager 100], Not retrying deletion of topic example at this time since it is marked ineligible for deletion (kafka.controller.TopicDeletionManager)
[2019-05-28 20:03:16,044] INFO [Topic Deletion Manager 100], Retrying delete topic for topic prueba since replicas [Topic=prueba,Partition=0,Replica=0] were not successfully deleted (kafka.controller.TopicDeletionManager)
[2019-05-28 20:03:16,055] INFO [Topic Deletion Manager 100], Not retrying deletion of topic prueba at this time since it is marked ineligible for deletion (kafka.controller.TopicDeletionManager)
[2019-05-28 20:03:16,055] INFO [Topic Deletion Manager 100], Retrying delete topic for topic clientes since replicas [Topic=clientes,Partition=0,Replica=0] were not successfully deleted (kafka.controller.TopicDeletionManager)
[2019-05-28 20:03:16,066] INFO [Topic Deletion Manager 100], Not retrying deletion of topic clientes at this time since it is marked ineligible for deletion (kafka.controller.TopicDeletionManager)
[2019-05-28 20:03:16,068] INFO [Controller id=100] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2019-05-28 20:03:16,068] INFO [Controller id=100] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2019-05-28 20:03:16,069] INFO [Controller id=100] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2019-05-28 20:03:16,069] INFO [Controller id=100] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2019-05-28 20:03:16,069] INFO [Controller id=100] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2019-05-28 20:03:16,086] INFO [Controller id=100] Starting the controller scheduler (kafka.controller.KafkaController)
[2019-05-28 20:03:21,092] TRACE [Controller id=100] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-05-28 20:03:21,094] DEBUG [Controller id=100] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2019-05-28 20:04:52,892] INFO [Controller id=100] Shutting down broker 100 (kafka.controller.KafkaController)
[2019-05-28 20:04:52,893] DEBUG [Controller id=100] All shutting down brokers: 100 (kafka.controller.KafkaController)
[2019-05-28 20:04:52,893] DEBUG [Controller id=100] Live brokers:  (kafka.controller.KafkaController)
[2019-05-28 20:04:52,896] TRACE [Controller id=100] All leaders = prueba-0 -> (Leader:-1,ISR:0,LeaderEpoch:3,ControllerEpoch:5),clientes-0 -> (Leader:-1,ISR:0,LeaderEpoch:3,ControllerEpoch:5),example-0 -> (Leader:-1,ISR:0,LeaderEpoch:3,ControllerEpoch:5) (kafka.controller.KafkaController)
[2019-05-28 20:04:54,186] INFO [ControllerEventThread controllerId=100] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2019-05-28 20:04:54,186] INFO [ControllerEventThread controllerId=100] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2019-05-28 20:04:54,186] INFO [ControllerEventThread controllerId=100] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2019-05-28 20:04:54,187] DEBUG [Controller id=100] Resigning (kafka.controller.KafkaController)
[2019-05-28 20:04:54,187] DEBUG [Controller id=100] Unregister BrokerModifications handler for Set(100) (kafka.controller.KafkaController)
[2019-05-28 20:04:54,188] INFO [PartitionStateMachine controllerId=100] Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2019-05-28 20:04:54,190] INFO [ReplicaStateMachine controllerId=100] Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2019-05-28 20:04:54,191] INFO [RequestSendThread controllerId=100] Shutting down (kafka.controller.RequestSendThread)
[2019-05-28 20:04:54,191] INFO [RequestSendThread controllerId=100] Stopped (kafka.controller.RequestSendThread)
[2019-05-28 20:04:54,191] INFO [RequestSendThread controllerId=100] Shutdown completed (kafka.controller.RequestSendThread)
[2019-05-28 20:04:54,193] INFO [Controller id=100] Resigned (kafka.controller.KafkaController)
[2019-05-28 20:06:27,644] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2019-05-28 20:06:27,663] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 6 and epoch zk version is now 6 (kafka.controller.KafkaController)
[2019-05-28 20:06:27,664] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2019-05-28 20:06:27,666] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2019-05-28 20:06:27,669] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2019-05-28 20:06:27,671] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2019-05-28 20:06:27,682] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 223) (kafka.controller.KafkaController)
[2019-05-28 20:06:27,698] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2019-05-28 20:06:27,713] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2019-05-28 20:06:27,726] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2019-05-28 20:06:27,728] INFO [Controller id=0] Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2019-05-28 20:06:27,729] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2019-05-28 20:06:27,729] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2019-05-28 20:06:27,729] INFO [Controller id=0] Current list of topics in the cluster: Set(prueba, clientes, example) (kafka.controller.KafkaController)
[2019-05-28 20:06:27,730] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2019-05-28 20:06:27,736] INFO [Controller id=0] List of topics to be deleted: prueba,clientes,example (kafka.controller.KafkaController)
[2019-05-28 20:06:27,736] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2019-05-28 20:06:27,736] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2019-05-28 20:06:27,736] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2019-05-28 20:06:27,746] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ReplicaStateMachine)
[2019-05-28 20:06:27,751] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ReplicaStateMachine)
[2019-05-28 20:06:27,754] INFO [RequestSendThread controllerId=0] Controller 0 connected to 192.168.1.66:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2019-05-28 20:06:27,773] INFO [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map([Topic=example,Partition=0,Replica=0] -> OnlineReplica, [Topic=clientes,Partition=0,Replica=0] -> OnlineReplica, [Topic=prueba,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2019-05-28 20:06:27,773] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.PartitionStateMachine)
[2019-05-28 20:06:27,775] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.PartitionStateMachine)
[2019-05-28 20:06:27,777] INFO [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map(prueba-0 -> OfflinePartition, clientes-0 -> OfflinePartition, example-0 -> OfflinePartition) (kafka.controller.PartitionStateMachine)
[2019-05-28 20:06:27,777] INFO [Controller id=0] Ready to serve as the new controller with epoch 6 (kafka.controller.KafkaController)
[2019-05-28 20:06:27,778] INFO [Controller id=0] Removing partitions Set() from the list of reassigned partitions in zookeeper (kafka.controller.KafkaController)
[2019-05-28 20:06:27,779] INFO [Controller id=0] No more partitions need to be reassigned. Deleting zk path /admin/reassign_partitions (kafka.controller.KafkaController)
[2019-05-28 20:06:27,781] INFO [Topic Deletion Manager 0], Handling deletion for topics example,prueba,clientes (kafka.controller.TopicDeletionManager)
[2019-05-28 20:06:27,784] INFO [Topic Deletion Manager 0], Deletion of topic example (re)started (kafka.controller.TopicDeletionManager)
[2019-05-28 20:06:27,785] INFO [Topic Deletion Manager 0], Topic deletion callback for example (kafka.controller.TopicDeletionManager)
[2019-05-28 20:06:27,791] INFO [Topic Deletion Manager 0], Partition deletion callback for example-0 (kafka.controller.TopicDeletionManager)
[2019-05-28 20:06:27,838] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-05-28 20:06:27,838] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=example,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-05-28 20:06:27,841] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=example,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-05-28 20:06:27,843] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=example,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-05-28 20:06:27,843] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-05-28 20:06:27,843] INFO [Topic Deletion Manager 0], Deletion of topic prueba (re)started (kafka.controller.TopicDeletionManager)
[2019-05-28 20:06:27,843] INFO [Topic Deletion Manager 0], Topic deletion callback for prueba (kafka.controller.TopicDeletionManager)
[2019-05-28 20:06:27,845] INFO [Topic Deletion Manager 0], Partition deletion callback for prueba-0 (kafka.controller.TopicDeletionManager)
[2019-05-28 20:06:27,856] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-05-28 20:06:27,856] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=prueba,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-05-28 20:06:27,856] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=prueba,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-05-28 20:06:27,857] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=prueba,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-05-28 20:06:27,857] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-05-28 20:06:27,857] INFO [Topic Deletion Manager 0], Deletion of topic clientes (re)started (kafka.controller.TopicDeletionManager)
[2019-05-28 20:06:27,857] INFO [Topic Deletion Manager 0], Topic deletion callback for clientes (kafka.controller.TopicDeletionManager)
[2019-05-28 20:06:27,858] INFO [Topic Deletion Manager 0], Partition deletion callback for clientes-0 (kafka.controller.TopicDeletionManager)
[2019-05-28 20:06:27,868] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-05-28 20:06:27,868] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=clientes,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-05-28 20:06:27,868] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=clientes,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-05-28 20:06:27,869] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=clientes,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-05-28 20:06:27,869] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-05-28 20:06:27,871] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2019-05-28 20:06:27,871] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2019-05-28 20:06:27,871] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2019-05-28 20:06:27,872] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2019-05-28 20:06:27,872] INFO [Controller id=0] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2019-05-28 20:06:27,885] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2019-05-28 20:06:27,924] DEBUG [Controller id=0] Delete topic callback invoked for StopReplicaResponse(responses={example-0=NONE}, error=NONE) (kafka.controller.KafkaController)
[2019-05-28 20:06:27,933] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=example,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-05-28 20:06:27,934] INFO [Topic Deletion Manager 0], Handling deletion for topics example,prueba,clientes (kafka.controller.TopicDeletionManager)
[2019-05-28 20:06:27,996] INFO [Topic Deletion Manager 0], Deletion of topic example successfully completed (kafka.controller.TopicDeletionManager)
[2019-05-28 20:06:27,998] INFO [Topic Deletion Manager 0], Deletion for replicas 0 for partition prueba-0 of topic prueba in progress (kafka.controller.TopicDeletionManager)
[2019-05-28 20:06:27,998] INFO [Topic Deletion Manager 0], Deletion for replicas 0 for partition clientes-0 of topic clientes in progress (kafka.controller.TopicDeletionManager)
[2019-05-28 20:06:27,998] DEBUG [Controller id=0] Delete topic callback invoked for StopReplicaResponse(responses={prueba-0=NONE}, error=NONE) (kafka.controller.KafkaController)
[2019-05-28 20:06:27,999] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=prueba,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-05-28 20:06:27,999] INFO [Topic Deletion Manager 0], Handling deletion for topics prueba,clientes (kafka.controller.TopicDeletionManager)
[2019-05-28 20:06:28,047] INFO [Topic Deletion Manager 0], Deletion of topic prueba successfully completed (kafka.controller.TopicDeletionManager)
[2019-05-28 20:06:28,048] INFO [Topic Deletion Manager 0], Deletion for replicas 0 for partition clientes-0 of topic clientes in progress (kafka.controller.TopicDeletionManager)
[2019-05-28 20:06:28,050] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2019-05-28 20:06:28,052] DEBUG [Controller id=0] Delete topics listener fired for topics clientes to be deleted (kafka.controller.KafkaController)
[2019-05-28 20:06:28,052] INFO [Controller id=0] Starting topic deletion for topics clientes (kafka.controller.KafkaController)
[2019-05-28 20:06:28,053] INFO [Topic Deletion Manager 0], Handling deletion for topics clientes (kafka.controller.TopicDeletionManager)
[2019-05-28 20:06:28,053] INFO [Topic Deletion Manager 0], Deletion for replicas 0 for partition clientes-0 of topic clientes in progress (kafka.controller.TopicDeletionManager)
[2019-05-28 20:06:28,053] DEBUG [Controller id=0] Delete topic callback invoked for StopReplicaResponse(responses={clientes-0=NONE}, error=NONE) (kafka.controller.KafkaController)
[2019-05-28 20:06:28,054] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=clientes,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-05-28 20:06:28,054] INFO [Topic Deletion Manager 0], Handling deletion for topics clientes (kafka.controller.TopicDeletionManager)
[2019-05-28 20:06:28,104] INFO [Topic Deletion Manager 0], Deletion of topic clientes successfully completed (kafka.controller.TopicDeletionManager)
[2019-05-28 20:06:28,106] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2019-05-28 20:06:28,107] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2019-05-28 20:06:32,892] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-05-28 20:06:32,894] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2019-05-28 20:08:26,192] INFO [Controller id=0] New topics: [Set(clients)], deleted topics: [Set()], new partition replica assignment [Map(clients-0 -> Vector(0))] (kafka.controller.KafkaController)
[2019-05-28 20:08:26,194] INFO [Controller id=0] New partition creation callback for clients-0 (kafka.controller.KafkaController)
[2019-05-28 20:09:07,948] INFO [Controller id=0] New topics: [Set(clientes)], deleted topics: [Set()], new partition replica assignment [Map(clientes-0 -> Vector(0))] (kafka.controller.KafkaController)
[2019-05-28 20:09:07,949] INFO [Controller id=0] New partition creation callback for clientes-0 (kafka.controller.KafkaController)
[2019-05-28 20:11:32,907] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-05-28 20:11:32,908] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(clientes-0 -> Vector(0), clients-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-05-28 20:11:32,909] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-05-28 20:11:32,909] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-05-28 20:21:15,561] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-05-28 20:21:15,562] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(clientes-0 -> Vector(0), clients-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-05-28 20:21:15,562] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-05-28 20:21:15,562] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-05-28 20:26:15,573] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-05-28 20:26:15,573] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(clientes-0 -> Vector(0), clients-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-05-28 20:26:15,573] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-05-28 20:26:15,573] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-05-28 20:31:15,582] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-05-28 20:31:15,582] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(clientes-0 -> Vector(0), clients-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-05-28 20:31:15,582] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-05-28 20:31:15,582] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-05-28 20:36:15,595] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-05-28 20:36:15,597] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(clientes-0 -> Vector(0), clients-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-05-28 20:36:15,597] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-05-28 20:36:15,597] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-05-28 20:41:15,606] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-05-28 20:41:15,607] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(clientes-0 -> Vector(0), clients-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-05-28 20:41:15,607] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-05-28 20:41:15,607] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-05-28 20:46:15,623] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-05-28 20:46:15,624] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(clientes-0 -> Vector(0), clients-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-05-28 20:46:15,625] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-05-28 20:46:15,625] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-05-28 20:51:15,621] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-05-28 20:51:15,622] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(clientes-0 -> Vector(0), clients-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-05-28 20:51:15,622] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-05-28 20:51:15,622] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-05-28 20:56:15,639] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-05-28 20:56:15,641] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(clientes-0 -> Vector(0), clients-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-05-28 20:56:15,641] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-05-28 20:56:15,642] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
